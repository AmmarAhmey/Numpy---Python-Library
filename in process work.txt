                                                        WORK IN PROGRESS
Indexing Numpy Arrays
- Indexing 1D Arrays
- Indexing Multi-dimensional Arrays
- Accessing only a single row in 2D arrays
- Indexing only a single column in 2D arrays
- Array Slicing 
    - Slicing 1D arrays
    - Slicing 2D arrays with specific columns and rows
    - Slicing 1D arrays with step size
    - Slicing Slicing 2D arrays with step size
    - Slicing 2D arrays on just rows or just columns 
- Sorting numpy arrays
    - Sorting 1D arrays
    - Sorting 2D arrays 
    - The concept of axis in numpy arrays
        - Sorting arrays on default axis
        - Sorting array with respect to rows
        - Sorting arrays with respect to columns 
- Filtering Arrays 
    - Filtering fancy indexing and boolean masks. (masking returns arrays of True/False values )
        - Filtering 1D arrays
        - Filtering 2D arrays (seems tricky)
    - Filtering with np.where(). (this method returns indices of elements that meet the condition)
        - Catching row and column indices into separate variables returned by np.where()
        - Catching only row indices
        - Catching only column indices 
        - Filtering 1D arrays with np.where()
        - Filtering 2D arrays with np.where()
            - Getting a 1D array from a 2D array using np.where() procedure. 
        - Replacing the values of a row/column with an/other value(s) based on certain conditions. 
        - Replacing the values of a row/column with an/other value(s) based on certain conditions else replace with some other values
        - Replacing the values of a row/column with an/other value(s) based on certain conditions else keep original values
- Adding and Removing data
    - Array Concatenation
        - Concatenation of 1D arrays
        - Concatenation of 2D arrays
            - Concatenating 2D arrays with same rows but different columns
            - Concatenating 2D arrays with same columns but different rows
        - Adding new columns
            - Adding columns with array that is in row shape. 
        - Adding new rows
            - Adding rows with array that is in column shape.
    - Deleting data
        - Deleting specific rows
        - Deleting specific columns 
        - Deleting rows filtered based on specific values. 
        - Deleting columns filtered based on specific values.
- Data Aggregation 
    - Sum 
    - mean
    - median
    - min
    - max
    - cumulative sum
    - All the above operations in the row direction and column direction 
- Array Vectorization 
    - Vectorized numpy operations such as addition, multiplication with scaler or other matrices. 
    - Converting a simple python function to a vectorized function using the power of numpy and then 
    - using this converted function to apply the same function but now in vectorized form. 
- Array Broadcasting
    - what is array broadcasting.
    - The 2 properties required for broadcasting .
    - How a 1D arrange must be arranged so that is can be compatible for broadcasting and eventually be compatible for mathematical operations with other array. 
- Checking a numpy function documentation 
- Saving and Loading Numpy Arrays
    - saving to numpy array file ‘npy’, the fastest for saving and loading. 
    - Saving to other possible formats such as pkl, csv etc. 
- Flipping and Transposing 
    - Flipping arrays of data 
        - Flipping only rows, 
        - Flipping only columns
        - Flipping rows and columns at the same time. 
    - Flipping image arrays (pixel arrays) for data augmentation.
        - Flipping image upside down
        - Flipping image right to left
        - Flipping the colors. 
    - Rotating arrays
        - Transposing rows to columns, columns to rows. 
        - Using transpose method, rotating images 
            - Rotating row wise, column wise and colors. 
    - Separating colors of image pixels, manipulating those pixel values and recombine them for augmented images. 
- Splitting and Stacking Arrays with Numpy
    - Different variations of splitting arrays related to normal data 
    - Different variations of splitting arrays of image data
    - Image Data augmentation with Numpy
        - For example, flipping or rotating images. Separating different color pixels, making changes in those pixel values and then combine them again.
- Stacking arrays of same or different dimensions
    - Stacking row wise and column wise. 
    
